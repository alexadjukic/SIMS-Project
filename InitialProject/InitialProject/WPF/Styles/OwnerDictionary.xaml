<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Colors-->
    <SolidColorBrush x:Key="BackgroundColor" Color="#0784b5"/>
    <SolidColorBrush x:Key="HighlightBrushKey" Color="#1E3F66"/>
    <SolidColorBrush x:Key="BorderBrush" Color="White"/>
    <SolidColorBrush x:Key="Background" Color="#91BAD6"/>
    <SolidColorBrush x:Key="Foreground" Color="#e1ebec" />
    <SolidColorBrush x:Key="HeaderRow" Color="#3b6ba5" />
    <SolidColorBrush x:Key="BackgroundWindow" Color="#528AAE" />
    <!--#endregion-->
    
    <!--#region MenuStyle-->
    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey}" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuNotificationButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="40"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey}" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuBackground" TargetType="Border">
        <Setter Property="Background" Value="#91BAD6"/>
    </Style>
    <Style x:Key="MenuBigBorder" TargetType="Border">
        <Setter Property="Background" Value="#528AAE"/>
    </Style>
    <Style x:Key="MenuGridBackground" TargetType="Grid">
        <Setter Property="Background" Value="#91BAD6"/>
    </Style>
    <!--#endregion-->
    
    <!--#region GridStyle-->
    <Style x:Key="GridWindowBackground" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BackgroundWindow}" />
    </Style>
    <!--#endregion-->
    
    <!--#region LabelStyle-->
    <Style x:Key="BasicLabel" TargetType="Label">
        <Setter Property="Label.Foreground" Value="#e1ebec" />
        <Setter Property="Label.FontSize" Value="12" />
    </Style>

    <Style x:Key="BoldLabel" TargetType="Label">
        <Setter Property="Label.Foreground" Value="#e1ebec" />
        <Setter Property="Label.FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <!--#endregion-->
    
    <!--#region  ListBoxStyle-->
    <Style x:Key="ListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderThickness="1"
                            BorderBrush="{StaticResource BorderBrush}"
                            Background="{StaticResource Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected"
                                            Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource HighlightBrushKey}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource HighlightBrushKey}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region DataGridStyle-->
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="430" />
        <Setter Property="Height" Value="100" />
    </Style>
    
    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{StaticResource Background}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey}" />
                <Setter Property="BorderBrush" Value="{StaticResource HighlightBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Background" Value="{StaticResource HighlightBrushKey}" />
        <Setter Property="Height" Value="25"/>
    </Style>
    <!--#endregion-->
    
    
    <!--#region TextBlockStyle-->
    <Style x:Key="BasicTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#e1ebec" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="19" />
    </Style>
    
    <Style x:Key="BoldTextBloxk" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#e1ebec" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="19" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="UnderlinedBoldTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#e1ebec" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="19" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>
    <!--#endregion-->
    
    <!--#region GroupBoxHeader-->
    <Style x:Key="GroupBox" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{StaticResource Foreground}"/>
        <Setter Property="Margin" Value="5,3,5,5" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontWeight="Bold" Style="{StaticResource BoldTextBloxk}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region ButtonStyle-->
    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="80" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <!--#endregion-->
    
    <!--#region  TextBoxStyle-->
    <Style x:Key="ValidationTemplateTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MultilineTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <!--#endregion-->
</ResourceDictionary>